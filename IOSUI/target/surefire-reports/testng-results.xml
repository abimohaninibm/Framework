<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-09-16T20:33:56 IST" name="IOSRetail" finished-at="2021-09-16T20:33:56 IST" duration-ms="121">
    <groups>
    </groups>
    <test started-at="2021-09-16T20:33:56 IST" name="Smoke" finished-at="2021-09-16T20:33:56 IST" duration-ms="121">
      <class name="IOS.iosRetail.HITSInquiriesTest">
        <test-method signature="hitsInquiries()[pri:0, instance:IOS.iosRetail.HITSInquiriesTest@524d6d96]" started-at="2021-09-16T20:33:56 IST" name="hitsInquiries" finished-at="2021-09-16T20:33:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hitsInquiries -->
      </class> <!-- IOS.iosRetail.HITSInquiriesTest -->
      <class name="IOS.iosRetail.SubOrderTest">
        <test-method signature="subOrder()[pri:0, instance:IOS.iosRetail.SubOrderTest@3943a2be]" started-at="2021-09-16T20:33:56 IST" name="subOrder" finished-at="2021-09-16T20:33:56 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subOrder -->
      </class> <!-- IOS.iosRetail.SubOrderTest -->
      <class name="IOS.iosRetail.EscalationTest">
        <test-method signature="escalation()[pri:0, instance:IOS.iosRetail.EscalationTest@7e9131d5]" started-at="2021-09-16T20:33:56 IST" name="escalation" finished-at="2021-09-16T20:33:56 IST" duration-ms="6" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertFalse(Assert.java:67)
at org.testng.Assert.assertFalse(Assert.java:77)
at IOS.iosRetail.EscalationTest.escalation(EscalationTest.java:11)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- escalation -->
      </class> <!-- IOS.iosRetail.EscalationTest -->
      <class name="IOS.iosRetail.VlanInfoTest">
        <test-method signature="vlanInfo()[pri:0, instance:IOS.iosRetail.VlanInfoTest@6f27a732]" started-at="2021-09-16T20:33:56 IST" name="vlanInfo" finished-at="2021-09-16T20:33:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vlanInfo -->
      </class> <!-- IOS.iosRetail.VlanInfoTest -->
      <class name="IOS.iosRetail.QuickSearchTest">
        <test-method signature="orderSearch()[pri:0, instance:IOS.iosRetail.QuickSearchTest@6c779568]" started-at="2021-09-16T20:33:56 IST" name="orderSearch" finished-at="2021-09-16T20:33:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderSearch -->
      </class> <!-- IOS.iosRetail.QuickSearchTest -->
      <class name="IOS.iosRetail.StatusTest">
        <test-method signature="status()[pri:0, instance:IOS.iosRetail.StatusTest@f381794]" started-at="2021-09-16T20:33:56 IST" name="status" finished-at="2021-09-16T20:33:56 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- status -->
      </class> <!-- IOS.iosRetail.StatusTest -->
      <class name="IOS.iosRetail.IOSInquiriesTest">
        <test-method signature="iosInquiries()[pri:0, instance:IOS.iosRetail.IOSInquiriesTest@2e1d27ba]" started-at="2021-09-16T20:33:56 IST" name="iosInquiries" finished-at="2021-09-16T20:33:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iosInquiries -->
      </class> <!-- IOS.iosRetail.IOSInquiriesTest -->
      <class name="IOS.iosRetail.SummaryTest">
        <test-method signature="summary()[pri:0, instance:IOS.iosRetail.SummaryTest@2cdd0d4b]" started-at="2021-09-16T20:33:56 IST" name="summary" finished-at="2021-09-16T20:33:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- summary -->
      </class> <!-- IOS.iosRetail.SummaryTest -->
    </test> <!-- Smoke -->
  </suite> <!-- IOSRetail -->
</testng-results>
